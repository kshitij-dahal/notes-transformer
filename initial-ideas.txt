Summary: App that takes in a pdf file with notes and based on its formatting, generates diff ways to study the notes more effectively

Modes:
Dictionary 
    modes:
        shuffled 
        in order
        look through all the terms as a list
        allow user to enter terms to guess (give answer correct if some words match)


overall functionalities:
- allow starring certain terms

dictionary <- similar to quizlet, to learn definitions
Example:
1.3 Topic <- bolded, number in front is optional
term - definition
eg. jksljadf
term - definition 
listname 
    - list item
    - list item

functionalities: 
get context - shows some of the notes around the given definition, and allows move up and move down
get topic - shows the topic under which the definition is eg. chapter name
get other uses - find other times that this definition has been used
get example - shows example of this concept being implemented
show number of definitions left


Classes:
Term
Explanation <- contains examples
Definition extends Explanation
TermList extends Explanation
Dictionary <- contains all terms and definitions, can get ordered or shuffled list
TermExplanationCollection implements Collection <- contains collection of terms and collections, that allows items to be added to it and creates iterator
TermExplanationIterator implements Iterator <- hasNext(), next()
TermExplanation <- contains pair of term and explanation
ExampleCollection implements Collection 
ExampleIterator implements Iterator




Design patterns
- use iterator design pattern for the term explanation 


Definition extends Explanation 
- includes definition of term
TermList extends Explanation
- includes list of 
Term 
- definition: includes definition of term or list of items if term is some topic
- id: returns something to identify the term in the original pdf(eg. Page number, line number), or maybe the unique term id
- 
PDFExtractor 
- responsible for extracting pdf into plain text
- returns a




